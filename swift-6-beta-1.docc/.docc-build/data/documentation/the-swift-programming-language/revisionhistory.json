{"primaryContentSections":[{"kind":"content","content":[{"inlineContent":[{"inlineContent":[{"text":"2024-06-10","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 6.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#preconcurrency","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about migrating to strict concurrency checking.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Specifying-the-Error-Type","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about throwing errors of a specific type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about package-level access"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2024-03-05"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.10.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about nested protocols","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Delegation","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added deprecation information"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#UIApplicationMain","type":"reference"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#NSApplicationMain","type":"reference"},{"type":"text","text":" sections."}]}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2023-12-11"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.9.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"borrowing","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"consuming"},{"type":"text","text":" modifiers"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables"},{"type":"text","text":" "},{"type":"text","text":"about setting a constant’s value after its declaration."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added more information about tasks, task groups, and task cancellation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"about implementing macros in an existing Swift package."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","type":"reference","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that extension macros have replaced conformance macros."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about back deployment.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"2023-09-18","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.9."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"type":"codeVoice","code":"if"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" expressions"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"with information about generating code at compile time."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Expanded the discussion of optionals in "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added an example of concurrency to ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about boxed protocol types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"buildPartialBlock(first:)"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":"buildPartialBlock(accumulated:next:)","type":"codeVoice"},{"type":"text","text":" methods"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added visionOS to the lists of platforms in","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Formatted the formal grammar to use blank lines for grouping."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2023-03-30","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.8.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"text":"showing ","type":"text"},{"type":"codeVoice","code":"defer"},{"text":" outside of error handling.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Adopted Swift-DocC for publication."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minor corrections and additions throughout."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2022-09-12","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.7."}]}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","type":"reference","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"text":"with information about sending data between actors and tasks,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and added information about the "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@unchecked"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked"},{"type":"text","text":" sections."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about creating a regular expression.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the short form of "},{"type":"codeVoice","code":"if"},{"type":"text","text":"-"},{"code":"let","type":"codeVoice"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"code":"#unavailable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","type":"reference","isActive":true},{"type":"text","text":" section."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2022-03-14"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.6.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about using "},{"type":"codeVoice","code":"#if"},{"type":"text","text":" "},{"text":"around chained method calls and other postfix expressions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the visual styling of figures throughout."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2021-09-20","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.5."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about asynchronous functions, tasks, and actors"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","isActive":true,"type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration"},{"type":"text","text":","},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","type":"reference","isActive":true},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","isActive":true,"type":"reference"},{"text":" sections.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with information about identifiers that start with an underscore.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2021-04-26","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.4.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about result builders.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about how in-out parameters"},{"text":" ","type":"text"},{"text":"can be implicitly converted to unsafe pointers in a function call.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true},{"type":"text","text":" sections,"},{"text":" ","type":"text"},{"text":"now that a function can have multiple variadic parameters.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that implicit member expressions can be chained together.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2020-09-16","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.3."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about multiple trailing closures"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"and added information about how trailing closures are matched to parameters","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about synthesized implementations","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":" for enumerations","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"now that you can write a generic ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clause in more places.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about using unowned references with optional values."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"@main","type":"codeVoice"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added ","type":"text"},{"code":"#filePath","type":"codeVoice"},{"type":"text","text":" to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"and updated the discussion of "},{"type":"codeVoice","code":"#file"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that closures can refer to "},{"type":"codeVoice","code":"self"},{"text":" implicitly in more scenarios.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","type":"reference"},{"text":" sections,","type":"text"},{"type":"text","text":" "},{"text":"now that a ","type":"text"},{"type":"codeVoice","code":"catch"},{"text":" clause can match against multiple errors.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added more information about "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" "},{"text":"and moved it into the new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that lazy properties can have observers."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that members of an enumeration can satisfy protocol requirements.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to describe when the getter is called before the observer."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to mention atomic operations.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2020-03-24"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about passing a key path instead of a closure"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about syntactic sugar the lets instances of"},{"text":" ","type":"text"},{"type":"text","text":"classes, structures, and enumerations be used with function call syntax."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that subscripts support parameters with default values.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that the ","type":"text"},{"code":"Self","type":"codeVoice"},{"type":"text","text":" can be used in more contexts."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to make it clearer that an implicitly unwrapped optional value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can be used as either an optional or non-optional value."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2019-09-10"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.1."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about functions"},{"type":"text","text":" "},{"type":"text","text":"that specify a protocol that their return value conforms to,"},{"type":"text","text":" "},{"type":"text","text":"instead of providing a specific named return type,"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about property wrappers","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about enumerations and structures"},{"type":"text","text":" "},{"type":"text","text":"that are frozen for library evolution"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","isActive":true},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","isActive":true},{"text":" sections","type":"text"},{"type":"text","text":" "},{"text":"with information about functions that omit ","type":"text"},{"code":"return","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using subscripts on types"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern","type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that an enumeration case pattern can match an optional value."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that memberwise initializers support"},{"type":"text","text":" "},{"text":"omitting parameters for properties that have a default value.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about dynamic members"},{"type":"text","text":" "},{"text":"that are looked up by key path at runtime","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup","type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added "},{"type":"codeVoice","code":"macCatalyst"},{"text":" to the list of target environments","type":"text"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" can be used to refer to the type"},{"type":"text","text":" "},{"type":"text","text":"introduced by the current class, structure, or enumeration declaration."}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2019-03-25"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.0.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"and updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about extended string delimiters."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about dynamically calling instances as functions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"using the "},{"type":"codeVoice","code":"dynamicCallable"},{"type":"text","text":" attribute."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","type":"reference","isActive":true},{"type":"text","text":" sections"},{"text":" ","type":"text"},{"text":"with information about handling future enumeration cases","type":"text"},{"text":" ","type":"text"},{"text":"in switch statements using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"unknown","type":"codeVoice"},{"text":" switch case attribute.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the identity key path (","type":"text"},{"type":"codeVoice","code":"\\.self"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using the less than ("},{"type":"codeVoice","code":"<"},{"type":"text","text":") operator"},{"text":" ","type":"text"},{"text":"in platform conditions to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"2018-09-17","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.2.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about accessing all of an enumeration’s cases","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about "},{"type":"codeVoice","code":"#error"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"#warning"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about inlining","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"under the ","type":"text"},{"code":"inlinable","type":"codeVoice"},{"text":" and  ","type":"text"},{"code":"usableFromInline","type":"codeVoice"},{"type":"text","text":" attributes."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about members that are looked up by name at runtime"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"under the ","type":"text"},{"code":"dynamicMemberLookup","type":"codeVoice"},{"text":" attribute.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"requires_stored_property_inits"},{"text":" and ","type":"text"},{"code":"warn_unqualified_access","type":"codeVoice"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to conditionally compile code","type":"text"},{"type":"text","text":" "},{"text":"depending on the Swift compiler version being used","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"code":"#dsohandle","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true},{"type":"text","text":" section."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2018-03-29","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 4.1."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about synthesized implementations of equivalence operators","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about conditional protocol conformance"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"and to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about recursive protocol constraints"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"code":"canImport()","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"targetEnvironment()"},{"text":" platform conditions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference","isActive":true},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-12-04","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.0.3.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that key paths support subscript components."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-09-19","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 4.0."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about exclusive access to memory","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that you can use generic "},{"type":"codeVoice","code":"where"},{"text":" clauses","type":"text"},{"type":"text","text":" "},{"text":"to constrain associated types.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about multiline string literals","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"and to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of the ","type":"text"},{"code":"objc","type":"codeVoice"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"now that this attribute is inferred in fewer places."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that subscripts can be generic.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"and in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"reference"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"now that protocol composition types can contain a superclass requirement."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of protocol extensions","type":"text"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration"},{"type":"text","text":" "},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"final"},{"text":" isn’t allowed in them.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about preconditions and fatal errors","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2017-03-27"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 3.1.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with information about extensions that include requirements."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added examples of iterating over a range"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of failable numeric conversions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about using the "},{"type":"codeVoice","code":"available"},{"type":"text","text":" attribute with a Swift language version."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that argument labels aren’t allowed when writing a function type."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of Swift language version numbers","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that an optional patch number is allowed.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that Swift distinguishes between functions that take multiple parameters"},{"type":"text","text":" "},{"type":"text","text":"and functions that take a single parameter of a tuple type."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the Dynamic Type Expression section"},{"type":"text","text":" "},{"text":"from the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":" is a Swift standard library function."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2016-10-27","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 3.0.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of weak and unowned references"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"reference","isActive":true},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":", "},{"type":"codeVoice","code":"unowned(safe)"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"unowned(unsafe)"},{"type":"text","text":" "},{"type":"text","text":"declaration modifiers"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"about using an optional value when a value of type ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" is expected.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to separate the discussion of parenthesized expressions and tuple expressions.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2016-09-13"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 3.0."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of functions in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},{"text":" section to note that","type":"text"},{"type":"text","text":" "},{"text":"all parameters get an argument label by default.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of operators"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","type":"reference","isActive":true},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"text":"now that you implement them as type methods instead of as global functions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"open"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileprivate"},{"type":"text","text":" access-level modifiers"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":" in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to note that it appears in front of a parameter’s type","type":"text"},{"text":" ","type":"text"},{"text":"instead of in front of a parameter’s name.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"code":"@noescape","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","isActive":true},{"text":" sections","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"now that they’re type attributes, rather than declaration attributes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about operator precedence groups"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","type":"reference"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated discussion throughout","type":"text"},{"type":"text","text":" "},{"text":"to use macOS instead of OS X,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":" instead of "},{"code":"ErrorProtocol","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"and protocol names such as ","type":"text"},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" "},{"text":"instead of ","type":"text"},{"code":"StringLiteralConvertible","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"now that generic "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clauses are written at the end of a declaration."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that closures are nonescaping by default."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"type":"codeVoice","code":"if"},{"text":", ","type":"text"},{"code":"while","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"guard"},{"type":"text","text":" statements"},{"text":" ","type":"text"},{"type":"text","text":"use a comma-separated list of conditions without "},{"type":"codeVoice","code":"where"},{"text":" clauses.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about switch cases that have multiple patterns"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of function types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"now that function argument labels are no longer part of a function’s type."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of protocol composition types"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to use the new "},{"code":"Protocol1 & Protocol2","type":"codeVoice"},{"type":"text","text":" syntax."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in the Dynamic Type Expression section"},{"text":" ","type":"text"},{"type":"text","text":"to use the new "},{"code":"type(of:)","type":"codeVoice"},{"type":"text","text":" syntax for dynamic type expressions."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of line control statements","type":"text"},{"type":"text","text":" "},{"text":"to use the ","type":"text"},{"type":"codeVoice","code":"#sourceLocation(file:line:)"},{"text":" syntax","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return"},{"type":"text","text":" "},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"Never"},{"text":" type.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about playground literals","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to note that only nonescaping closures can capture in-out parameters."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion about default parameters","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that they can’t be reordered in function calls."}]}]},{"content":[{"inlineContent":[{"text":"Updated attribute arguments to use a colon","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about throwing an error"},{"text":" ","type":"text"},{"type":"text","text":"inside the catch block of a rethrowing function"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about accessing the selector","type":"text"},{"text":" ","type":"text"},{"text":"of an Objective-C property’s getter or setter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"about generic type aliases and using type aliases inside of protocols."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of function types in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to note that parentheses around the parameter types are required."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"to note that the ","type":"text"},{"code":"@IBAction","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"@IBOutlet"},{"text":", and ","type":"text"},{"code":"@NSManaged","type":"codeVoice"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"type":"text","text":"imply the "},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"@GKInspectable"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of optional protocol requirements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to clarify that they’re used only in code that interoperates with Objective-C."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removed the discussion of explicitly using "},{"code":"let","type":"codeVoice"},{"text":" in function parameters","type":"text"},{"text":" ","type":"text"},{"text":"from the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Removed the discussion of the "},{"code":"Boolean","type":"codeVoice"},{"text":" protocol","type":"text"},{"type":"text","text":" "},{"text":"from the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"now that the protocol has been removed from the Swift standard library.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Corrected the discussion of the ","type":"text"},{"type":"codeVoice","code":"@NSApplicationMain"},{"text":" attribute","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2016-03-21"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 2.2."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about how to conditionally compile code"},{"text":" ","type":"text"},{"text":"depending on the version of Swift being used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to distinguish","type":"text"},{"text":" ","type":"text"},{"text":"between methods or initializers whose names differ","type":"text"},{"type":"text","text":" "},{"type":"text","text":"only by the names of their arguments"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"#selector","type":"codeVoice"},{"text":" syntax","type":"text"},{"type":"text","text":" "},{"text":"for Objective-C selectors","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of associated types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use the "},{"type":"codeVoice","code":"associatedtype"},{"type":"text","text":" keyword"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","isActive":true},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","type":"reference"},{"type":"text","text":" sections."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated information about initializers that return "},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"text":"before the instance is fully initialized","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about comparing tuples"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using keywords as external parameter names"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section to note that"},{"text":" ","type":"text"},{"type":"text","text":"enumerations and enumeration cases can use this attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with discussion of custom operators that contain a dot."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that rethrowing functions can’t directly throw errors."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about property observers being called","type":"text"},{"type":"text","text":" "},{"text":"when you pass a property as an in-out parameter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a section about error handling"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated figures in the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"section to show the deallocation process more clearly."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removed discussion of C-style "},{"code":"for","type":"codeVoice"},{"type":"text","text":" loops,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"++","type":"codeVoice"},{"text":" prefix and postfix operators,","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"code":"--","type":"codeVoice"},{"text":" prefix and postfix operators.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Removed discussion of variable function arguments","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the special syntax for curried functions."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2015-10-20","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 2.1.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true,"type":"reference"},{"text":" sections","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that string interpolations can contain string literals."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with information about the ","type":"text"},{"code":"@noescape","type":"codeVoice"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" sections"},{"type":"text","text":" "},{"type":"text","text":"with information about tvOS."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the behavior of in-out parameters","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about how values specified in closure capture lists are captured.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining"},{"type":"text","text":" "},{"type":"text","text":"section to clarify how assignment through optional chaining"},{"type":"text","text":" "},{"type":"text","text":"behaves."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improved the discussion of autoclosures"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example that uses the "},{"type":"codeVoice","code":"??"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},{"type":"text","text":" chapter."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2015-09-16","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 2.0."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about error handling","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","isActive":true,"type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","type":"reference","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that all types can conform to the ","type":"text"},{"type":"codeVoice","code":"ErrorType"},{"type":"text","text":" protocol."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new ","type":"text"},{"type":"codeVoice","code":"try?"},{"text":" keyword","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about recursive enumerations"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about API availability checking"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new "},{"code":"guard","type":"codeVoice"},{"text":" statement","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about protocol extensions","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about access control for unit testing"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl"},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new optional pattern","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","type":"reference","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"code":"repeat","type":"codeVoice"},{"text":"-","type":"text"},{"code":"while","type":"codeVoice"},{"text":" loop.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" no longer conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"code":"CollectionType","type":"codeVoice"},{"type":"text","text":" protocol from the Swift standard library."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the new Swift standard library"},{"type":"text","text":" "},{"code":"print(_:separator:terminator)","type":"codeVoice"},{"type":"text","text":" function"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the behavior"},{"type":"text","text":" "},{"text":"of enumeration cases with ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" raw values"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" attribute —"},{"type":"text","text":" "},{"type":"text","text":"including its "},{"code":"@autoclosure(escaping)","type":"codeVoice"},{"type":"text","text":" form —"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about the "},{"type":"codeVoice","code":"@available"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"@warn_unused_result"},{"text":" attributes.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with information about the ","type":"text"},{"type":"codeVoice","code":"@convention"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of using multiple optional bindings"},{"text":" ","type":"text"},{"type":"text","text":"with a "},{"type":"codeVoice","code":"where"},{"text":" clause","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"about how concatenating string literals using the ","type":"text"},{"code":"+","type":"codeVoice"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"text":"happens at compile time.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about comparing metatype values and using them"},{"type":"text","text":" "},{"text":"to construct instances with initializer expressions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about when user-defined assertions are disabled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@NSManaged"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"text":"now that the attribute can be applied to certain instance methods.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that variadic parameters can be declared in any position","type":"text"},{"type":"text","text":" "},{"text":"in a function’s parameter list.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about how a nonfailable initializer can delegate"},{"type":"text","text":" "},{"type":"text","text":"up to a failable initializer"},{"type":"text","text":" "},{"type":"text","text":"by force-unwrapping the result of the superclass’s initializer."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using enumeration cases as functions"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about explicitly referencing an initializer"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about build configuration"},{"text":" ","type":"text"},{"type":"text","text":"and line control statements"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"about constructing class instances from metatype values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"section about weak references being unsuitable for caching."}]}]},{"content":[{"inlineContent":[{"text":"Updated a note in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"to mention that stored type properties are lazily initialized.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"to clarify how variables and constants are captured in closures.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to describe when you can apply the "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" attribute to classes."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about the performance of executing a "},{"code":"throw","type":"codeVoice"},{"type":"text","text":" statement."},{"text":" ","type":"text"},{"type":"text","text":"Added similar information about the "},{"code":"do","type":"codeVoice"},{"text":" statement","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","type":"reference","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about stored and computed type properties"},{"type":"text","text":" "},{"type":"text","text":"for classes, structures, and enumerations."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about labeled break statements.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated a note in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to clarify the behavior of "},{"type":"codeVoice","code":"willSet"},{"text":" and ","type":"text"},{"code":"didSet","type":"codeVoice"},{"text":" observers.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about the scope of "},{"type":"codeVoice","code":"private"},{"type":"text","text":" access."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References"},{"type":"text","text":" "},{"text":"section about the differences in weak references","type":"text"},{"text":" ","type":"text"},{"text":"between garbage collected systems and ARC.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with a more precise definition of Unicode scalars."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2015-04-08"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 1.2."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now has a native "},{"type":"codeVoice","code":"Set"},{"text":" collection type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" is now an attribute of the parameter declaration,"},{"type":"text","text":" "},{"type":"text","text":"not its type."},{"text":" ","type":"text"},{"type":"text","text":"There’s also a new "},{"type":"codeVoice","code":"@noescape"},{"text":" parameter declaration attribute.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Type methods and properties now use the "},{"code":"static","type":"codeVoice"},{"text":" keyword","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as a declaration modifier."},{"type":"text","text":" "},{"type":"text","text":"For more information see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift now includes the ","type":"text"},{"type":"codeVoice","code":"as?"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"as!"},{"text":" failable downcast operators.","type":"text"},{"type":"text","text":" "},{"text":"For more information,","type":"text"},{"text":" ","type":"text"},{"text":"see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new guide section about","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the overflow division ("},{"type":"codeVoice","code":"&\/"},{"text":") and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"overflow remainder ("},{"type":"codeVoice","code":"&%"},{"type":"text","text":") operators"},{"text":" ","type":"text"},{"type":"text","text":"from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the rules for constant and"},{"text":" ","type":"text"},{"text":"constant property declaration and initialization.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the definition of Unicode scalars in string literals."},{"text":" ","type":"text"},{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","isActive":true,"type":"reference"},{"text":" to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a half-open range with the same start and end index will be empty."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types"},{"text":" to clarify","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the capturing rules for variables."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow"},{"type":"text","text":" to clarify"},{"type":"text","text":" "},{"type":"text","text":"the overflow behavior of signed and unsigned integers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration"},{"text":" to clarify","type":"text"},{"type":"text","text":" "},{"text":"protocol declaration scope and members.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"to clarify the syntax for"},{"text":" ","type":"text"},{"text":"weak and unowned references in closure capture lists.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"text":" to explicitly mention","type":"text"},{"type":"text","text":" "},{"text":"examples of supported characters for custom operators,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"such as those in the Mathematical Operators, Miscellaneous Symbols,"},{"text":" ","type":"text"},{"type":"text","text":"and Dingbats Unicode blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Constants can now be declared without being initialized","type":"text"},{"text":" ","type":"text"},{"text":"in local function scope.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"They must have a set value before first use."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In an initializer, constant properties can now only assign a value once."},{"type":"text","text":" "},{"type":"text","text":"For more information,"},{"type":"text","text":" "},{"type":"text","text":"see "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiple optional bindings can now appear in a single "},{"type":"codeVoice","code":"if"},{"text":" statement","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as a comma-separated list of assignment expressions."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","isActive":true},{"text":" ","type":"text"},{"text":"must appear within a postfix expression.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol casts are no longer limited to "},{"code":"@objc","type":"codeVoice"},{"text":" protocols.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type casts that can fail at runtime","type":"text"},{"type":"text","text":" "},{"text":"now use the ","type":"text"},{"code":"as?","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"as!","type":"codeVoice"},{"type":"text","text":" operator,"},{"text":" ","type":"text"},{"type":"text","text":"and type casts that are guaranteed not to fail use the "},{"code":"as","type":"codeVoice"},{"type":"text","text":" operator."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators"},{"text":".","type":"text"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2014-10-16"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 1.1.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added a full guide to ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a description of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements"},{"type":"text","text":" "},{"type":"text","text":"for protocols."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Constants and variables of type ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" can now contain","type":"text"},{"type":"text","text":" "},{"type":"text","text":"function instances. Updated the example in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},{"type":"text","text":" "},{"type":"text","text":"to show how to check for and cast to a function type"},{"type":"text","text":" "},{"text":"within a ","type":"text"},{"type":"codeVoice","code":"switch"},{"text":" statement.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Enumerations with raw values","type":"text"},{"text":" ","type":"text"},{"text":"now have a ","type":"text"},{"type":"codeVoice","code":"rawValue"},{"text":" property rather than a ","type":"text"},{"code":"toRaw()","type":"codeVoice"},{"text":" method","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and a failable initializer with a "},{"type":"codeVoice","code":"rawValue"},{"type":"text","text":" parameter"},{"type":"text","text":" "},{"type":"text","text":"rather than a "},{"code":"fromRaw()","type":"codeVoice"},{"type":"text","text":" method."},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new reference section about"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"text":"which can trigger initialization failure.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Custom operators can now contain the ","type":"text"},{"code":"?","type":"codeVoice"},{"type":"text","text":" character."},{"text":" ","type":"text"},{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true,"type":"reference"},{"type":"text","text":" reference to describe"},{"type":"text","text":" "},{"type":"text","text":"the revised rules."},{"type":"text","text":" "},{"type":"text","text":"Removed a duplicate description of the valid set of operator characters"},{"text":" ","type":"text"},{"type":"text","text":"from "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2014-08-18","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"New document that describes Swift 1.0,"},{"text":" ","type":"text"},{"type":"text","text":"Apple’s new programming language for building iOS and OS X apps."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","isActive":true,"type":"reference"},{"text":" in protocols.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added a new section about ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions"},{"type":"text","text":" can now use string interpolation."},{"text":" ","type":"text"},{"type":"text","text":"Removed a note to the contrary."}]}]},{"content":[{"inlineContent":[{"text":"Updated the","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to reflect the fact that "},{"type":"codeVoice","code":"String"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Character"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can no longer be combined with the addition operator ("},{"code":"+","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"or addition assignment operator (","type":"text"},{"type":"codeVoice","code":"+="},{"text":").","type":"text"},{"type":"text","text":" "},{"text":"These operators are now used only with ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" values."},{"type":"text","text":" "},{"type":"text","text":"Use the "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type’s "},{"code":"append(_:)","type":"codeVoice"},{"type":"text","text":" method"},{"type":"text","text":" "},{"text":"to append a single ","type":"text"},{"code":"Character","type":"codeVoice"},{"type":"text","text":" value onto the end of a string."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"availability","type":"codeVoice"},{"text":" attribute to","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals"},{"text":" no longer implicitly evaluate to","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when they have a value and "},{"type":"codeVoice","code":"false"},{"text":" when they do not,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to avoid confusion when working with optional "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" values."},{"text":" ","type":"text"},{"type":"text","text":"Instead, make an explicit check against "},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"=="},{"text":" or ","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":" operators"},{"type":"text","text":" "},{"text":"to find out if an optional contains a value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now has a "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","type":"reference"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"code":"a ?? b","type":"codeVoice"},{"type":"text","text":"), which unwraps an optional’s value if it exists,"},{"text":" ","type":"text"},{"type":"text","text":"or returns a default value if the optional is "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated and expanded"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to reflect and demonstrate that string and character comparison"},{"type":"text","text":" "},{"text":"and prefix \/ suffix comparison are now based on","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Unicode canonical equivalence of extended grapheme clusters."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"You can now try to set a property’s value, assign to a subscript,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or call a mutating method or operator through"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The information about"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining"},{"type":"text","text":" "},{"text":"has been updated accordingly,","type":"text"},{"text":" ","type":"text"},{"text":"and the examples of checking for method call success in","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"have been expanded to show how to check for property setting success."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"through optional chaining.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to note that you can no longer append a single item to an array","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"code":"+=","type":"codeVoice"},{"text":" operator.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, use the ","type":"text"},{"type":"codeVoice","code":"append(_:)"},{"text":" method,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or append a single-item array with the "},{"code":"+=","type":"codeVoice"},{"type":"text","text":" operator."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note that the start value "},{"type":"codeVoice","code":"a"},{"type":"text","text":" "},{"type":"text","text":"for the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"code":"a...b","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"a..<b"},{"text":" ","type":"text"},{"type":"text","text":"must not be greater than the end value "},{"code":"b","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Rewrote the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"to remove its introductory coverage of initializer overrides.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This chapter now focuses more on the addition of"},{"type":"text","text":" "},{"type":"text","text":"new functionality in a subclass,"},{"text":" ","type":"text"},{"text":"and the modification of existing functionality with overrides.","type":"text"},{"text":" ","type":"text"},{"text":"The chapter’s example of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters"},{"type":"text","text":" "},{"text":"has been rewritten to show how to override a ","type":"text"},{"code":"description","type":"codeVoice"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"(The examples of modifying an inherited property’s default value"},{"type":"text","text":" "},{"text":"in a subclass initializer have been moved to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","isActive":true,"type":"reference"},{"text":" chapter.)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that overrides of a designated initializer"},{"type":"text","text":" "},{"type":"text","text":"must now be marked with the "},{"type":"codeVoice","code":"override"},{"text":" modifier.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to note that the ","type":"text"},{"type":"codeVoice","code":"required"},{"text":" modifier is now written before","type":"text"},{"text":" ","type":"text"},{"text":"every subclass implementation of a required initializer,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and that the requirements for required initializers"},{"type":"text","text":" "},{"text":"can now be satisfied by automatically inherited initializers.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Infix ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods"},{"text":" no longer require","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"@infix"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"@prefix","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@postfix"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"text":"for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators"},{"type":"text","text":" "},{"text":"have been replaced by ","type":"text"},{"type":"codeVoice","code":"prefix"},{"type":"text","text":" and "},{"code":"postfix","type":"codeVoice"},{"text":" declaration modifiers.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note about the order in which"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators"},{"type":"text","text":" are applied"},{"text":" ","type":"text"},{"text":"when both a prefix and a postfix operator are applied to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the same operand."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operator functions for"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","type":"reference"},{"text":" no longer use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"@assignment"},{"text":" attribute when defining the function.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The order in which modifiers are specified when defining"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},{"type":"text","text":" has changed."},{"type":"text","text":" "},{"type":"text","text":"You now write "},{"type":"codeVoice","code":"prefix operator"},{"text":" rather than ","type":"text"},{"type":"codeVoice","code":"operator prefix"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"for example.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"dynamic"},{"text":" declaration modifier","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about how type inference works"},{"type":"text","text":" "},{"type":"text","text":"with "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added more information about curried functions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new chapter about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to reflect the fact that Swift’s "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" type now represents"},{"type":"text","text":" "},{"type":"text","text":"a single Unicode extended grapheme cluster."},{"text":" ","type":"text"},{"text":"Includes a new section on","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"and more information about","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","type":"reference"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that Unicode scalars inside string literals"},{"type":"text","text":" "},{"type":"text","text":"are now written as "},{"code":"\\u{n}","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"where ","type":"text"},{"type":"codeVoice","code":"n"},{"type":"text","text":" is a hexadecimal number between 0 and 10FFFF,"},{"text":" ","type":"text"},{"type":"text","text":"the range of Unicode’s codespace."}]}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"NSString","type":"codeVoice"},{"type":"text","text":" "},{"type":"codeVoice","code":"length"},{"text":" property is now mapped onto","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Swift’s native "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type as "},{"type":"codeVoice","code":"utf16Count"},{"text":", not ","type":"text"},{"code":"utf16count","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift’s native "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type no longer has"},{"text":" ","type":"text"},{"type":"text","text":"an "},{"code":"uppercaseString","type":"codeVoice"},{"type":"text","text":" or "},{"code":"lowercaseString","type":"codeVoice"},{"type":"text","text":" property."},{"type":"text","text":" "},{"type":"text","text":"The corresponding section in"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"text":" ","type":"text"},{"type":"text","text":"has been removed, and various code examples have been updated."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","isActive":true,"type":"reference"},{"text":" section to note that","type":"text"},{"type":"text","text":" "},{"text":"multiple related variables can be defined on a single line","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with one type annotation."}]}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"@optional","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"@lazy"},{"type":"text","text":", "},{"type":"codeVoice","code":"@final"},{"type":"text","text":", and "},{"code":"@required","type":"codeVoice"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"text":"are now the ","type":"text"},{"code":"optional","type":"codeVoice"},{"text":", ","type":"text"},{"code":"lazy","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"final"},{"type":"text","text":", and "},{"code":"required","type":"codeVoice"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the entire book to refer to ","type":"text"},{"type":"codeVoice","code":"..<"},{"type":"text","text":" as"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"(rather than the “half-closed range operator”)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","isActive":true,"type":"reference"},{"type":"text","text":" "},{"text":"section to note that ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" now has"},{"type":"text","text":" "},{"text":"a Boolean ","type":"text"},{"type":"codeVoice","code":"isEmpty"},{"text":" property.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Clarified the full list of characters that can be used"},{"type":"text","text":" "},{"text":"when defining ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" and the Booleans "},{"code":"true","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" are now "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift’s "},{"code":"Array","type":"codeVoice"},{"type":"text","text":" type now has full value semantics."},{"type":"text","text":" "},{"text":"Updated the information about ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","type":"reference","isActive":true},{"type":"text","text":" to reflect the new approach."},{"type":"text","text":" "},{"type":"text","text":"Also clarified the assignment and copy behavior for strings arrays and dictionaries."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","isActive":true,"type":"reference"},{"text":" is now written as","type":"text"},{"type":"text","text":" "},{"code":"[SomeType]","type":"codeVoice"},{"type":"text","text":" rather than "},{"code":"SomeType[]","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","isActive":true,"type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which is written as ","type":"text"},{"code":"[KeyType: ValueType]","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a new section about ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Examples of ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","isActive":true,"type":"reference"},{"type":"text","text":" now use"},{"text":" ","type":"text"},{"text":"the global ","type":"text"},{"code":"sorted(_:_:)","type":"codeVoice"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"text":"rather than the global ","type":"text"},{"type":"codeVoice","code":"sort(_:_:)"},{"type":"text","text":" function,"},{"text":" ","type":"text"},{"type":"text","text":"to reflect the new array value semantics."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the information about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"to clarify that the memberwise structure initializer is made available"},{"type":"text","text":" "},{"text":"even if a structure’s stored properties don’t have default values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated to ","type":"text"},{"code":"..<","type":"codeVoice"},{"type":"text","text":" rather than "},{"code":"..","type":"codeVoice"},{"type":"text","text":" "},{"text":"for the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","type":"reference","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added an example of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"name":"Beta Software","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"type":"paragraph","inlineContent":[{"text":"This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.","type":"text"}]},{"inlineContent":[{"text":"Learn more about using ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/support\/beta-software\/","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"sections":[],"abstract":[{"type":"text","text":"Review the recent changes to this book."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"},"hierarchy":{"paths":[["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"Document Revision History"},"kind":"article","references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"title":"Advanced Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators","kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Converting-Errors-to-Optional-Values":{"abstract":[],"title":"Converting Errors to Optional Values","type":"topic","url":"\/documentation\/the-swift-programming-language\/errorhandling#Converting-Errors-to-Optional-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"kind":"article","title":"Functions","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","abstract":[{"type":"text","text":"Define and call functions, label their arguments, and use their return values."}],"role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Function-Type":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","title":"Function Type","url":"\/documentation\/the-swift-programming-language\/types#Function-Type","kind":"section","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Result-Builders":{"title":"Result Builders","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Result-Builders","kind":"section","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicMemberLookup":{"abstract":[],"title":"dynamicMemberLookup","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicMemberLookup","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/inheritance","kind":"article","abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"title":"Inheritance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Keywords-and-Punctuation":{"abstract":[],"title":"Keywords and Punctuation","type":"topic","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Keywords-and-Punctuation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"url":"\/documentation\/the-swift-programming-language\/controlflow","title":"Control Flow","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"Structure code with branches, loops, and early exits."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Iterating-over-Enumeration-Cases":{"abstract":[],"title":"Iterating over Enumeration Cases","type":"topic","url":"\/documentation\/the-swift-programming-language\/enumerations#Iterating-over-Enumeration-Cases","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Deferred-Actions":{"abstract":[],"title":"Deferred Actions","type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Deferred-Actions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-a-Dictionary":{"abstract":[],"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-a-Dictionary","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","title":"Accessing and Modifying a Dictionary"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","kind":"article","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/optionalchaining","title":"Optional Chaining","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Assigning-Constant-Properties-During-Initialization":{"abstract":[],"title":"Assigning Constant Properties During Initialization","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Assigning-Constant-Properties-During-Initialization","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Asynchronous-Functions-and-Methods":{"abstract":[],"title":"Asynchronous Functions and Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Asynchronous-Functions-and-Methods","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Subscripts-of-Optional-Type":{"abstract":[],"title":"Accessing Subscripts of Optional Type","type":"topic","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Subscripts-of-Optional-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Operators":{"abstract":[],"title":"Operators","type":"topic","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compiler-Control-Statements":{"abstract":[],"title":"Compiler Control Statements","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Compiler-Control-Statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Type-Subscripts":{"abstract":[],"title":"Type Subscripts","type":"topic","url":"\/documentation\/the-swift-programming-language\/subscripts#Type-Subscripts","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optional-Binding":{"abstract":[],"title":"Optional Binding","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Optional-Binding","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Raw-Values":{"abstract":[],"title":"Raw Values","type":"topic","url":"\/documentation\/the-swift-programming-language\/enumerations#Raw-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Key-Path-Expression":{"abstract":[],"title":"Key-Path Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Key-Path-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Equivalence-Operators":{"abstract":[],"title":"Equivalence Operators","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Equivalence-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Literal-Expression":{"abstract":[],"title":"Literal Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Literal-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Variable-Properties":{"abstract":[],"title":"Type Variable Properties","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Variable-Properties","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Checking-for-Protocol-Conformance":{"url":"\/documentation\/the-swift-programming-language\/protocols#Checking-for-Protocol-Conformance","type":"topic","abstract":[],"kind":"section","title":"Checking for Protocol Conformance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"title":"Strings and Characters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","role":"article","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","abstract":[{"type":"text","text":"Store and manipulate text."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Operator-Methods":{"abstract":[],"title":"Operator Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Operator-Methods","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Declaration-Attributes":{"abstract":[],"title":"Declaration Attributes","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#Declaration-Attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Literals":{"abstract":[],"title":"String Literals","type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Overflow-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Overflow-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","type":"topic","title":"Overflow Operators","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Actor-Declaration":{"abstract":[],"title":"Actor Declaration","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Actor-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","kind":"article","role":"article","url":"\/documentation\/the-swift-programming-language\/lexicalstructure","title":"Lexical Structure","type":"topic","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Any-Type":{"abstract":[],"title":"Any Type","type":"topic","url":"\/documentation\/the-swift-programming-language\/types#Any-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Range-Operators":{"abstract":[],"title":"Range Operators","type":"topic","url":"\/documentation\/the-swift-programming-language\/basicoperators#Range-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extensions-with-a-Generic-Where-Clause":{"url":"\/documentation\/the-swift-programming-language\/generics#Extensions-with-a-Generic-Where-Clause","title":"Extensions with a Generic Where Clause","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","abstract":[],"type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Failable-Initializers":{"abstract":[],"title":"Failable Initializers","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Failable-Initializers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Explicit-Member-Expression":{"abstract":[],"title":"Explicit Member Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Explicit-Member-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Value-Overflow":{"abstract":[],"title":"Value Overflow","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Value-Overflow","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicCallable":{"abstract":[],"title":"dynamicCallable","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicCallable","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#resultBuilder":{"abstract":[],"title":"resultBuilder","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#resultBuilder","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Hash-Values-for-Set-Types":{"abstract":[],"title":"Hash Values for Set Types","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Hash-Values-for-Set-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Precedence-for-Custom-Infix-Operators":{"abstract":[],"title":"Precedence for Custom Infix Operators","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Precedence-for-Custom-Infix-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting#Type-Casting-for-Any-and-AnyObject":{"abstract":[],"title":"Type Casting for Any and AnyObject","type":"topic","url":"\/documentation\/the-swift-programming-language\/typecasting#Type-Casting-for-Any-and-AnyObject","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Representing-and-Throwing-Errors":{"abstract":[],"title":"Representing and Throwing Errors","type":"topic","url":"\/documentation\/the-swift-programming-language\/errorhandling#Representing-and-Throwing-Errors","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance#Overriding-Property-Getters-and-Setters":{"abstract":[],"title":"Overriding Property Getters and Setters","type":"topic","url":"\/documentation\/the-swift-programming-language\/inheritance#Overriding-Property-Getters-and-Setters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Associated-Type-Declaration":{"abstract":[],"title":"Protocol Associated Type Declaration","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Associated-Type-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Class-Only-Protocols":{"abstract":[],"title":"Class-Only Protocols","type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Class-Only-Protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Autoclosures":{"abstract":[],"title":"Autoclosures","type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Autoclosures","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels":{"abstract":[],"title":"Access Levels","type":"topic","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Default-Parameter-Values":{"title":"Default Parameter Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","kind":"section","type":"topic","abstract":[],"url":"\/documentation\/the-swift-programming-language\/functions#Default-Parameter-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Comparing-Strings":{"abstract":[],"title":"Comparing Strings","type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Comparing-Strings","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Escaping-Closures":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","title":"Escaping Closures","url":"\/documentation\/the-swift-programming-language\/closures#Escaping-Closures","kind":"section","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Inheritance-and-Overriding":{"abstract":[],"title":"Initializer Inheritance and Overriding","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Inheritance-and-Overriding","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Do-Statement":{"abstract":[],"title":"Do Statement","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Do-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Throw-Statement":{"abstract":[],"title":"Throw Statement","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Throw-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Overriding-a-Failable-Initializer":{"abstract":[],"title":"Overriding a Failable Initializer","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Overriding-a-Failable-Initializer","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Enumeration-Case-Pattern":{"abstract":[],"title":"Enumeration Case Pattern","type":"topic","url":"\/documentation\/the-swift-programming-language\/patterns#Enumeration-Case-Pattern","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Functions-With-an-Implicit-Return":{"abstract":[],"title":"Functions With an Implicit Return","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Functions-With-an-Implicit-Return","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Checking-API-Availability":{"abstract":[],"title":"Checking API Availability","type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Checking-API-Availability","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Weak-References":{"abstract":[],"title":"Weak References","type":"topic","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Weak-References","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switch-Statement":{"abstract":[],"title":"Switch Statement","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Switch-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compile-Time-Diagnostic-Statement":{"abstract":[],"title":"Compile-Time Diagnostic Statement","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Compile-Time-Diagnostic-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Observers":{"abstract":[],"title":"Property Observers","type":"topic","url":"\/documentation\/the-swift-programming-language\/properties#Property-Observers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optionals":{"abstract":[],"title":"Optionals","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Optionals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-an-Array":{"abstract":[],"title":"Accessing and Modifying an Array","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-an-Array","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closures-Are-Reference-Types":{"abstract":[],"title":"Closures Are Reference Types","type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Closures-Are-Reference-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-Grapheme-Clusters":{"abstract":[],"title":"Extended Grapheme Clusters","type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-Grapheme-Clusters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"url":"\/documentation\/the-swift-programming-language\/generics","title":"Generics","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","role":"article","kind":"article","abstract":[{"type":"text","text":"Write code that works for multiple types and specify requirements for those types."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Declaration-Modifiers":{"abstract":[],"title":"Declaration Modifiers","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Declaration-Modifiers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"url":"\/documentation\/the-swift-programming-language\/opaquetypes","role":"article","abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}],"title":"Opaque and Boxed Protocol Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Failable-Initializer-Requirements":{"abstract":[],"title":"Failable Initializer Requirements","type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Failable-Initializer-Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"url":"\/documentation\/the-swift-programming-language\/accesscontrol","role":"article","abstract":[{"type":"text","text":"Manage the visibility of code by declaration, file, and module."}],"title":"Access Control","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extending-a-Generic-Type":{"url":"\/documentation\/the-swift-programming-language\/generics#Extending-a-Generic-Type","kind":"section","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","type":"topic","title":"Extending a Generic Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#UIApplicationMain":{"abstract":[],"title":"UIApplicationMain","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#UIApplicationMain","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#UIApplicationMain","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"url":"\/documentation\/the-swift-programming-language\/guidedtour","role":"article","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"title":"A Swift Tour","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Identifiers":{"abstract":[],"title":"Identifiers","type":"topic","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Identifiers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Dictionary-Type-Shorthand-Syntax":{"abstract":[],"title":"Dictionary Type Shorthand Syntax","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Dictionary-Type-Shorthand-Syntax","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Extensions":{"url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Extensions","kind":"section","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","type":"topic","title":"Protocol Extensions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unknown":{"abstract":[],"title":"unknown","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#unknown","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels-for-Unit-Test-Targets":{"abstract":[],"title":"Access Levels for Unit Test Targets","type":"topic","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels-for-Unit-Test-Targets","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"kind":"article","abstract":[{"type":"text","text":"Use built-in named and compound types."}],"title":"Types","role":"article","url":"\/documentation\/the-swift-programming-language\/types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Prefix-and-Postfix-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Prefix-and-Postfix-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","kind":"section","type":"topic","abstract":[],"title":"Prefix and Postfix Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Switch":{"url":"\/documentation\/the-swift-programming-language\/controlflow#Switch","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","kind":"section","type":"topic","abstract":[],"title":"Switch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"abstract":[{"type":"text","text":"Perform asynchronous operations."}],"url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","type":"topic","role":"article","title":"Concurrency","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Specifying-the-Error-Type":{"url":"\/documentation\/the-swift-programming-language\/errorhandling#Specifying-the-Error-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Specifying-the-Error-Type","kind":"section","type":"topic","abstract":[],"title":"Specifying the Error Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Required-Initializers":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/initialization#Required-Initializers","title":"Required Initializers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","type":"topic","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Interpolation":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Interpolation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","kind":"section","type":"topic","abstract":[],"title":"String Interpolation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Repeat-While":{"url":"\/documentation\/the-swift-programming-language\/controlflow#Repeat-While","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","kind":"section","type":"topic","abstract":[],"title":"Repeat-While"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"kind":"article","title":"Macros","type":"topic","url":"\/documentation\/the-swift-programming-language\/macros","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","role":"article","abstract":[{"type":"text","text":"Use macros to generate code at compile time."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Function-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Function-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","kind":"section","type":"topic","abstract":[],"title":"Function Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Break-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#Break-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","kind":"section","type":"topic","abstract":[],"title":"Break Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Member-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Member-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression","kind":"section","type":"topic","abstract":[],"title":"Implicit Member Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Delegation":{"url":"\/documentation\/the-swift-programming-language\/protocols#Delegation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Delegation","kind":"section","type":"topic","abstract":[],"title":"Delegation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Await-Operator":{"url":"\/documentation\/the-swift-programming-language\/expressions#Await-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","kind":"section","type":"topic","abstract":[],"title":"Await Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Contextual-Where-Clauses":{"url":"\/documentation\/the-swift-programming-language\/generics#Contextual-Where-Clauses","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","kind":"section","type":"topic","abstract":[],"title":"Contextual Where Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Capturing-Values":{"url":"\/documentation\/the-swift-programming-language\/closures#Capturing-Values","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","title":"Capturing Values","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Debugging-with-Assertions":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Debugging-with-Assertions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","kind":"section","type":"topic","abstract":[],"title":"Debugging with Assertions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Printing-Constants-and-Variables":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Printing-Constants-and-Variables","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","kind":"section","type":"topic","abstract":[],"title":"Printing Constants and Variables"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Nil-Coalescing-Operator":{"url":"\/documentation\/the-swift-programming-language\/basicoperators#Nil-Coalescing-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","kind":"section","type":"topic","abstract":[],"title":"Nil-Coalescing Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Properties-Through-Optional-Chaining":{"url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Properties-Through-Optional-Chaining","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","kind":"section","type":"topic","abstract":[],"title":"Accessing Properties Through Optional Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Protocol-Composition-Type":{"url":"\/documentation\/the-swift-programming-language\/types#Protocol-Composition-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","kind":"section","type":"topic","abstract":[],"title":"Protocol Composition Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","kind":"section","type":"topic","abstract":[],"title":"Protocol Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Array-Type-Shorthand-Syntax":{"url":"\/documentation\/the-swift-programming-language\/collectiontypes#Array-Type-Shorthand-Syntax","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","kind":"section","type":"topic","abstract":[],"title":"Array Type Shorthand Syntax"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-String-Delimiters":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-String-Delimiters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","kind":"section","type":"topic","abstract":[],"title":"Extended String Delimiters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#NSApplicationMain":{"url":"\/documentation\/the-swift-programming-language\/attributes#NSApplicationMain","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#NSApplicationMain","kind":"section","type":"topic","abstract":[],"title":"NSApplicationMain"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Methods-with-Special-Names":{"url":"\/documentation\/the-swift-programming-language\/declarations#Methods-with-Special-Names","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","kind":"section","type":"topic","abstract":[],"title":"Methods with Special Names"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"role":"article","url":"\/documentation\/the-swift-programming-language\/initialization","type":"topic","title":"Initialization","abstract":[{"type":"text","text":"Set the initial values for a type’s stored properties and perform one-time setup."}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Type-Casting-Operators":{"url":"\/documentation\/the-swift-programming-language\/expressions#Type-Casting-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","kind":"section","type":"topic","abstract":[],"title":"Type-Casting Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"role":"article","url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","title":"Enumerations","abstract":[{"type":"text","text":"Model custom types that define a list of possible values."}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Extension-Declaration":{"abstract":[],"title":"Extension Declaration","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Extension-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Sets":{"url":"\/documentation\/the-swift-programming-language\/collectiontypes#Sets","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","kind":"section","type":"topic","abstract":[],"title":"Sets"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#frozen":{"url":"\/documentation\/the-swift-programming-language\/attributes#frozen","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","kind":"section","type":"topic","abstract":[],"title":"frozen"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Indices":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Indices","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","kind":"section","type":"topic","abstract":[],"title":"String Indices"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Optional-Protocol-Requirements":{"url":"\/documentation\/the-swift-programming-language\/protocols#Optional-Protocol-Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","kind":"section","type":"topic","abstract":[],"title":"Optional Protocol Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Wrappers":{"url":"\/documentation\/the-swift-programming-language\/properties#Property-Wrappers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","kind":"section","type":"topic","abstract":[],"title":"Property Wrappers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Conditionally-Conforming-to-a-Protocol":{"url":"\/documentation\/the-swift-programming-language\/protocols#Conditionally-Conforming-to-a-Protocol","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","kind":"section","type":"topic","abstract":[],"title":"Conditionally Conforming to a Protocol"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Special-Characters-in-String-Literals":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Special-Characters-in-String-Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","kind":"section","type":"topic","abstract":[],"title":"Special Characters in String Literals"},"https://developer.apple.com/support/beta-software/":{"titleInlineContent":[{"type":"text","text":"Apple’s beta software"}],"url":"https:\/\/developer.apple.com\/support\/beta-software\/","identifier":"https:\/\/developer.apple.com\/support\/beta-software\/","type":"link","title":"Apple’s beta software"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Defer-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#Defer-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement","kind":"section","type":"topic","abstract":[],"title":"Defer Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"abstract":[{"type":"text","text":"Define requirements that conforming types must implement."}],"url":"\/documentation\/the-swift-programming-language\/protocols","type":"topic","kind":"article","role":"article","title":"Protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency#Sendable-Types":{"url":"\/documentation\/the-swift-programming-language\/concurrency#Sendable-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","kind":"section","type":"topic","abstract":[],"title":"Sendable Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Concatenating-Strings-and-Characters":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Concatenating-Strings-and-Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","kind":"section","type":"topic","abstract":[],"title":"Concatenating Strings and Characters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"title":"Statements","url":"\/documentation\/the-swift-programming-language\/statements","kind":"article","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","role":"article","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"title":"Generic Parameters and Arguments","kind":"article","abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-Any-Type":{"url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-Any-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","kind":"section","type":"topic","abstract":[],"title":"Enumerations with Cases of Any Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Memberwise-Initializers-for-Structure-Types":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","kind":"section","abstract":[],"url":"\/documentation\/the-swift-programming-language\/initialization#Memberwise-Initializers-for-Structure-Types","title":"Memberwise Initializers for Structure Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Where-Clauses":{"url":"\/documentation\/the-swift-programming-language\/generics#Generic-Where-Clauses","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses","kind":"section","type":"topic","abstract":[],"title":"Generic Where Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Stored-Variable-Observers-and-Property-Observers":{"url":"\/documentation\/the-swift-programming-language\/declarations#Stored-Variable-Observers-and-Property-Observers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","kind":"section","type":"topic","abstract":[],"title":"Stored Variable Observers and Property Observers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Implicitly-Unwrapped-Optionals":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Implicitly-Unwrapped-Optionals","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals","title":"Implicitly Unwrapped Optionals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#String-Literals":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure#String-Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","kind":"section","type":"topic","abstract":[],"title":"String Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#In-Out-Parameters":{"title":"In-Out Parameters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","kind":"section","type":"topic","abstract":[],"url":"\/documentation\/the-swift-programming-language\/declarations#In-Out-Parameters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Function-Call-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Function-Call-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","kind":"section","type":"topic","abstract":[],"title":"Function Call Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Result-Transformations":{"url":"\/documentation\/the-swift-programming-language\/attributes#Result-Transformations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","kind":"section","type":"topic","abstract":[],"title":"Result Transformations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Alias-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Type-Alias-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration","kind":"section","type":"topic","abstract":[],"title":"Type Alias Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language":{"title":"The Swift Programming Language (6.0 beta)","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language","url":"\/documentation\/the-swift-programming-language","role":"collection","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Comparison-Operators":{"url":"\/documentation\/the-swift-programming-language\/basicoperators#Comparison-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","kind":"section","type":"topic","abstract":[],"title":"Comparison Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Conditional-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Conditional-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","kind":"section","type":"topic","abstract":[],"title":"Conditional Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Declaring-Constants-and-Variables":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Declaring-Constants-and-Variables","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables","kind":"section","type":"topic","abstract":[],"title":"Declaring Constants and Variables"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Rethrowing-Functions-and-Methods":{"abstract":[],"title":"Rethrowing Functions and Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Rethrowing-Functions-and-Methods","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Parameter-Modifiers":{"url":"\/documentation\/the-swift-programming-language\/declarations#Parameter-Modifiers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers","kind":"section","type":"topic","abstract":[],"title":"Parameter Modifiers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Type-Annotations":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Type-Annotations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","kind":"section","type":"topic","abstract":[],"title":"Type Annotations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"type":"topic","title":"Patterns","role":"article","kind":"article","url":"\/documentation\/the-swift-programming-language\/patterns","abstract":[{"type":"text","text":"Match and destructure values."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Custom-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Custom-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","kind":"section","type":"topic","abstract":[],"title":"Custom Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"topic","abstract":[{"type":"text","text":"Model the lifetime of objects and their relationships."}],"title":"Automatic Reference Counting","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switching-Over-Future-Enumeration-Cases":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","title":"Switching Over Future Enumeration Cases","url":"\/documentation\/the-swift-programming-language\/statements#Switching-Over-Future-Enumeration-Cases","kind":"section","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Regular-Expression-Literals":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Regular-Expression-Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals","kind":"section","type":"topic","abstract":[],"title":"Regular Expression Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Sendable":{"url":"\/documentation\/the-swift-programming-language\/attributes#Sendable","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","kind":"section","type":"topic","abstract":[],"title":"Sendable"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Compound-Assignment-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Compound-Assignment-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","kind":"section","type":"topic","abstract":[],"title":"Compound Assignment Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Optional-Chaining-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Optional-Chaining-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","kind":"section","type":"topic","abstract":[],"title":"Optional-Chaining Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Precedence-Group-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Precedence-Group-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration","kind":"section","type":"topic","abstract":[],"title":"Precedence Group Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#attached":{"url":"\/documentation\/the-swift-programming-language\/attributes#attached","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","kind":"section","type":"topic","abstract":[],"title":"attached"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"url":"\/documentation\/the-swift-programming-language\/thebasics","title":"The Basics","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","kind":"article","type":"topic","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Guard-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#Guard-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","kind":"section","type":"topic","abstract":[],"title":"Guard Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Subscript-Options":{"url":"\/documentation\/the-swift-programming-language\/subscripts#Subscript-Options","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","kind":"section","type":"topic","abstract":[],"title":"Subscript Options"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Trailing-Closures":{"url":"\/documentation\/the-swift-programming-language\/closures#Trailing-Closures","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","kind":"section","type":"topic","abstract":[],"title":"Trailing Closures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types-with-a-Generic-Where-Clause":{"url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types-with-a-Generic-Where-Clause","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","kind":"section","type":"topic","abstract":[],"title":"Associated Types with a Generic Where Clause"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Implicitly-Assigned-Raw-Values":{"url":"\/documentation\/the-swift-programming-language\/enumerations#Implicitly-Assigned-Raw-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","kind":"section","type":"topic","abstract":[],"title":"Implicitly Assigned Raw Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Line-Control-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#Line-Control-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement","kind":"section","type":"topic","abstract":[],"title":"Line Control Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Availability-Condition":{"url":"\/documentation\/the-swift-programming-language\/statements#Availability-Condition","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","kind":"section","type":"topic","abstract":[],"title":"Availability Condition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Arrays":{"abstract":[],"title":"Arrays","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Arrays","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#main":{"title":"main","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#main","kind":"section","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Metatype-Type":{"url":"\/documentation\/the-swift-programming-language\/types#Metatype-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","kind":"section","type":"topic","abstract":[],"title":"Metatype Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Constant-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Constant-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","kind":"section","type":"topic","abstract":[],"title":"Constant Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closure-Expressions":{"url":"\/documentation\/the-swift-programming-language\/closures#Closure-Expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","kind":"section","type":"topic","abstract":[],"title":"Closure Expressions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Initializer-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Initializer-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","kind":"section","type":"topic","abstract":[],"title":"Initializer Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"type":"topic","title":"Error Handling","abstract":[{"type":"text","text":"Respond to and recover from errors."}],"role":"article","url":"\/documentation\/the-swift-programming-language\/errorhandling","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Half-Open-Range-Operator":{"url":"\/documentation\/the-swift-programming-language\/basicoperators#Half-Open-Range-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","kind":"section","type":"topic","abstract":[],"title":"Half-Open Range Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Optional-Pattern":{"url":"\/documentation\/the-swift-programming-language\/patterns#Optional-Pattern","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","kind":"section","type":"topic","abstract":[],"title":"Optional Pattern"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Mutability-of-Collections":{"url":"\/documentation\/the-swift-programming-language\/collectiontypes#Mutability-of-Collections","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","kind":"section","type":"topic","abstract":[],"title":"Mutability of Collections"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Early-Exit":{"title":"Early Exit","kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Early-Exit","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","type":"topic","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type":{"url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","kind":"section","type":"topic","abstract":[],"title":"Enumerations with Cases of a Raw-Value Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Subscripts":{"url":"\/documentation\/the-swift-programming-language\/generics#Generic-Subscripts","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","kind":"section","type":"topic","abstract":[],"title":"Generic Subscripts"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#preconcurrency":{"url":"\/documentation\/the-swift-programming-language\/attributes#preconcurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#preconcurrency","kind":"section","type":"topic","abstract":[],"title":"preconcurrency"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types":{"url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","kind":"section","type":"topic","abstract":[],"title":"Associated Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Conversion-to-a-Pointer-Type":{"url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Conversion-to-a-Pointer-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","kind":"section","type":"topic","abstract":[],"title":"Implicit Conversion to a Pointer Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Failable-Initializers":{"url":"\/documentation\/the-swift-programming-language\/declarations#Failable-Initializers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","kind":"section","type":"topic","abstract":[],"title":"Failable Initializers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Shorthand-Getter-Declaration":{"title":"Shorthand Getter Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","kind":"section","type":"topic","abstract":[],"url":"\/documentation\/the-swift-programming-language\/properties#Shorthand-Getter-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/declarations","kind":"article","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}],"title":"Declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Optional-Tuple-Return-Types":{"url":"\/documentation\/the-swift-programming-language\/functions#Optional-Tuple-Return-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","kind":"section","type":"topic","abstract":[],"title":"Optional Tuple Return Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/attributes","kind":"article","abstract":[{"type":"text","text":"Add information to declarations and types."}],"title":"Attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Composition":{"url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Composition","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","kind":"section","type":"topic","abstract":[],"title":"Protocol Composition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Type-Properties":{"url":"\/documentation\/the-swift-programming-language\/properties#Type-Properties","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","kind":"section","type":"topic","abstract":[],"title":"Type Properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors":{"url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","kind":"section","type":"topic","abstract":[],"title":"Handling Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Variadic-Parameters":{"abstract":[],"title":"Variadic Parameters","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Variadic-Parameters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Self-Type":{"url":"\/documentation\/the-swift-programming-language\/types#Self-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","kind":"section","type":"topic","abstract":[],"title":"Self Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Literals":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","kind":"section","type":"topic","abstract":[],"title":"Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Functions-that-Never-Return":{"url":"\/documentation\/the-swift-programming-language\/declarations#Functions-that-Never-Return","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","kind":"section","type":"topic","abstract":[],"title":"Functions that Never Return"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#available":{"url":"\/documentation\/the-swift-programming-language\/attributes#available","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available","kind":"section","type":"topic","abstract":[],"title":"available"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Type-Attributes":{"url":"\/documentation\/the-swift-programming-language\/attributes#Type-Attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","kind":"section","type":"topic","abstract":[],"title":"Type Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints":{"url":"\/documentation\/the-swift-programming-language\/generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","kind":"section","type":"topic","abstract":[],"title":"Using a Protocol in Its Associated Type’s Constraints"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Assertions-and-Preconditions":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Assertions-and-Preconditions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","kind":"section","type":"topic","abstract":[],"title":"Assertions and Preconditions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Try-Operator":{"url":"\/documentation\/the-swift-programming-language\/expressions#Try-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","kind":"section","type":"topic","abstract":[],"title":"Try Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Parameters-Without-Argument-Labels":{"url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Parameters-Without-Argument-Labels","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels","kind":"section","type":"topic","abstract":[],"title":"Initializer Parameters Without Argument Labels"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors-Using-Do-Catch":{"url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors-Using-Do-Catch","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch","kind":"section","type":"topic","abstract":[],"title":"Handling Errors Using Do-Catch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#backDeployed":{"url":"\/documentation\/the-swift-programming-language\/attributes#backDeployed","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","kind":"section","type":"topic","abstract":[],"title":"backDeployed"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Calling-Methods-Through-Optional-Chaining":{"url":"\/documentation\/the-swift-programming-language\/optionalchaining#Calling-Methods-Through-Optional-Chaining","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","kind":"section","type":"topic","abstract":[],"title":"Calling Methods Through Optional Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Initializer-Requirements":{"url":"\/documentation\/the-swift-programming-language\/protocols#Initializer-Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","kind":"section","type":"topic","abstract":[],"title":"Initializer Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Capture-Lists":{"url":"\/documentation\/the-swift-programming-language\/expressions#Capture-Lists","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists","title":"Capture Lists"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Recursive-Enumerations":{"url":"\/documentation\/the-swift-programming-language\/enumerations#Recursive-Enumerations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","kind":"section","type":"topic","abstract":[],"title":"Recursive Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unchecked":{"url":"\/documentation\/the-swift-programming-language\/attributes#unchecked","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked","kind":"section","type":"topic","abstract":[],"title":"unchecked"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"kind":"article","title":"Memory Safety","type":"topic","url":"\/documentation\/the-swift-programming-language\/memorysafety","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","abstract":[{"text":"Structure your code to avoid conflicts when accessing memory.","type":"text"}],"role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Defining-a-Capture-List":{"url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Defining-a-Capture-List","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","kind":"section","type":"topic","abstract":[],"title":"Defining a Capture List"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Selector-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Selector-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","kind":"section","type":"topic","abstract":[],"title":"Selector Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Unowned-Optional-References":{"url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Unowned-Optional-References","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","kind":"section","type":"topic","abstract":[],"title":"Unowned Optional References"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Unicode-Scalar-Values":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Unicode-Scalar-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","kind":"section","type":"topic","abstract":[],"title":"Unicode Scalar Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation":{"url":"\/documentation\/the-swift-programming-language\/protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","kind":"section","type":"topic","abstract":[],"title":"Adopting a Protocol Using a Synthesized Implementation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#While-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#While-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement","kind":"section","type":"topic","abstract":[],"title":"While Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Conditional-Compilation-Block":{"url":"\/documentation\/the-swift-programming-language\/statements#Conditional-Compilation-Block","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","kind":"section","type":"topic","abstract":[],"title":"Conditional Compilation Block"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"kind":"article","title":"Expressions","type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","abstract":[{"type":"text","text":"Access, modify, and assign values."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#For-In-Loops":{"url":"\/documentation\/the-swift-programming-language\/controlflow#For-In-Loops","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops","kind":"section","type":"topic","abstract":[],"title":"For-In Loops"}}}